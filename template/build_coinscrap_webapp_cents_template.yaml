apiVersion: v1
kind: Template
labels:
  template: build_coinscrap_webapp_cents_template
message: Application ${APPLICATION_NAME} created in coinscrap-huchas-digitales namespace
metadata:
  annotations:
    description: ${APPLICATION_NAME}-application
    openshift.io/display-name: WebApp for CoinScrap
    openshift.io/provider-display-name: Red Hat, Inc.
    tags: ${APPLICATION_TAG}
    template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/
    template.openshift.io/long-description: This template defines resources needed for create a WebApp for CoinScrap
    template.openshift.io/support-url: https://access.redhat.com
  creationTimestamp: null
  name: ${APPLICATION_NAME}
objects:
  # SERVICE OF APPLICATION #
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The application's port.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
      - port: ${{APPLICATION_PORT}}
        targetPort: ${{APPLICATION_PORT}}
    selector:
      deploymentConfig: ${APPLICATION_NAME}
  # IMAGESTREAM CREATED AFTER LAUNCH THE BUILD APPLICATION POD WITH BUILDCONFIG #
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  # BUILDCONFIG CREATED AFTER LAUNCH THE TEMPLATE PROCESS #
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
        httpsProxy: ${SOURCE_PROXY}
      sourceSecret:
        name: ${SOURCE_SECRET}
      type: Git
    strategy:
      sourceStrategy:
        forcePull: true
        from:
          kind: ImageStreamTag
          name: s2i-core-centos7:latest
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: Source
    triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
    strategy:
      dockerStrategy:
        env:
          - name: GIT_SSL_NO_VERIFY
            value: 'true'
  # DEPLOYMENT CONFIG FOR DEPLOY THE APPLICATION PODS AND CREATED WITH THE LATEST UPDATE OF IMAGESTREAM #
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - args:
          - npm
          - run
          - start:prod
          env:
          - name: CLIENT_ENV_API_BASE_URL
            valueFrom:
              configMapKeyRef:
                key: CLIENT_ENV_API_BASE_URL
                name: webapp-env
          - name: CLIENT_ENV_NODE_ENV
            valueFrom:
              configMapKeyRef:
                key: CLIENT_ENV_NODE_ENV
                name: webapp-env
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            name: ${APPLICATION_NAME}
            # THE NEXT VALUES ARE CONFIG IN THE ADMINISTRATION RESOURCES QUOTAS AND LIMIT RANGES OF THE NAMESPACE/PROJECT
#            resources:
#              limits:
#                cpu: ${{CPU_LIMIT}}
#                memory: ${RAM_LIMIT}
#              requests:
#                cpu: ${{CPU_REQUEST_LIMIT}}
#                memory: ${RAM_REQUEST_LIMIT}
            ports:
              - containerPort: ${{APPLICATION_PORT}}
                name: ${APPLICATION_NAME}
                protocol: TCP
        terminationGracePeriodSeconds: 75
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange
      - type: ConfigChange
## PARAMETERS FOR PROCESS TEMPLATE ##
parameters:
- description: The name for the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
- description: Tag for your application
  displayName: Tag for your application
  name: APPLICATION_TAG
  required: true
  value: v1.0
- description: Custom application service Port
  displayName: Service Port
  name: APPLICATION_PORT
  required: true
- description: Git source URI for application
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/arq-dom-san-digital/coinscrap-huchas-digitales-ocp.git
- description: Git branch/tag reference
  displayName: Git Reference
  name: SOURCE_REPOSITORY_REF
  required: true
  value: master
- description: Secret name of the Github connection credentials
  displayName: Secret for the Github connection
  name: SOURCE_SECRET
  required: true
  value: github-user
- description: GitHub trigger secret
  displayName: Github Webhook Secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
  required: true
- description: Generic build trigger secret
  displayName: Generic Webhook Secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GENERIC_WEBHOOK_SECRET
  required: true
- description: Namespace in which the ImageStreams for Red Hat Middleware images are
    installed. These ImageStreams are normally installed in the openshift namespace.
    You should only need to modify this if you've installed the ImageStreams in a
    different namespace/project.
  displayName: ImageStream Namespace
  name: IMAGE_STREAM_NAMESPACE
  required: true
  value: openshift
- description: POD CPU Limit count by core or milecores
  displayName: POD CPU Limit count by core or milecores
  name: CPU_LIMIT
  required: false
  value: '2'
- description: POD MEMORY RAM Limit
  displayName: POD MEMORY RAM Limit
  name: RAM_LIMIT
  required: false
  value: '2G'
- description: POD CPU Request Limit count by core or milecores
  displayName: POD CPU Request Limit count by core or milecores
  name: CPU_REQUEST_LIMIT
  required: false
  value: '1200m'
- description: POD MEMORY RAM Request Limit
  displayName: POD MEMORY RAM Request Limit
  name: RAM_REQUEST_LIMIT
  required: false
  value: '1280Mi'
- description: Configure your Source proxy https if you have one
  displayName: Source proxy https
  name: SOURCE_PROXY
  required: false
- description: Path of the repository within Git project to build; empty for root project directory.
  displayName: Context Directory
  name: CONTEXT_DIR
  required: false
  value: webapp